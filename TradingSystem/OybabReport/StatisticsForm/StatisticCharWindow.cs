using ComponentFactory.Krypton.Toolkit;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Oybab.DAL;
using System.IO;
using DevExpress.XtraCharts;
using System.Collections;
using System.Diagnostics;
using Oybab.Report.Model;
using DevExpress.XtraPrinting.Localization;

namespace Oybab.Report.StatisticsForm
{
    public sealed partial class StatisticCharWindow : KryptonForm
    {
        Font TheFont = null;
        private StatisticModel Model { get; set; }
        public StatisticCharWindow(List<RecordChart> records, StatisticModel Model)
        {
            this.Model = Model;

            InitializeComponent();

            PreviewLocalizer.Active = new CutomPreviewLocalizer(this.Model);

            this.Text = Model.Title;


            Assembly asm = Assembly.LoadFrom(System.IO.Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Res.dll"));
            this.Icon = new Icon(asm.GetManifestResourceStream(@"Oybab.Res.Resources.Images.PC.Statistic.ico"));

            

            // Create a series, and add it to the chart. 


            //if (null != recordsStack)
            //{
            //    // This line of code is generated by Data Source Configuration Wizard
            //    chartControl1.DataSource = recordsStack;

            //    Series series1 = new Series(Resources.GetRes().GetString("Cash"), ViewType.StackedBar);
            //    series1.Tag = Resources.GetRes().GetString("Cash");
            //    chartControl1.Series.Add(series1);

            //    // Adjust the series data members. 
            //    series1.ArgumentDataMember = "name";

            //    series1.ValueDataMembers.AddRange(new string[] { "price" });

            //    series1.DataFilters.Add(new DataFilter() { ColumnName = "name2", Condition = DataFilterCondition.Equal, Value = Resources.GetRes().GetString("Cash") });

            //    Series series2 = new Series(Resources.GetRes().GetString("CardPaidPrice"), ViewType.StackedBar);
            //    series2.Tag = Resources.GetRes().GetString("CardPaidPrice");
            //    chartControl1.Series.Add(series2);

            //    // Adjust the series data members. 
            //    series2.ArgumentDataMember = "name";

            //    series2.ValueDataMembers.AddRange(new string[] { "price" });

            //    series2.DataFilters.Add(new DataFilter() { ColumnName = "name2", Condition = DataFilterCondition.Equal, Value = Resources.GetRes().GetString("CardPaidPrice") });


            //    TheFont = Model.Font;

            //    if (Model.EnableAntialiasing)
            //    {
            //        ((XYDiagram)chartControl1.Diagram).AxisX.Label.Font = TheFont;
            //        chartControl1.Legend.Font = TheFont;
            //        chartControl1.CustomDrawCrosshair += chartControl2_CustomDrawCrosshair;

            //        chartControl1.Legend.Antialiasing = true;
            //        ((XYDiagram)chartControl1.Diagram).AxisX.Label.EnableAntialiasing = DevExpress.Utils.DefaultBoolean.True;

            //    }
            //}
            //else
            //{
                // This line of code is generated by Data Source Configuration Wizard
                chartControl1.DataSource = records;

                Series series1 = new Series("My Series", ViewType.Bar);

                chartControl1.Series.Add(series1);

                // Adjust the series data members. 
                series1.ArgumentDataMember = "name";

                series1.ValueDataMembers.AddRange(new string[] { "price"});


                // Access the view-type-specific options of the series. 
                ((BarSeriesView)series1.View).ColorEach = true;
                series1.LegendTextPattern = "{A}";
                TheFont = Model.Font;

                if (Model.EnableAntialiasing)
                { 

                    series1.CrosshairLabelPattern = "{V}:{A}";
                    ((XYDiagram)chartControl1.Diagram).AxisX.Label.Font = TheFont;
                    chartControl1.Legend.Font = TheFont;
                    chartControl1.CustomDrawCrosshair += chartControl1_CustomDrawCrosshair;

                    chartControl1.Legend.Antialiasing = true;
                    ((XYDiagram)chartControl1.Diagram).AxisX.Label.EnableAntialiasing = DevExpress.Utils.DefaultBoolean.True;

                }
           // }

            


            
            
                

        }


        private void chartControl1_CustomDrawCrosshair(object sender, CustomDrawCrosshairEventArgs e)
        {
            

            foreach (CrosshairElement element in e.CrosshairElementGroups.SelectMany(eg => eg.CrosshairElements))
            {
                element.LabelElement.Font = TheFont;
                
            }
            
        }




        private void chartControl2_CustomDrawCrosshair(object sender, CustomDrawCrosshairEventArgs e)
        {
            foreach (CrosshairElement element in e.CrosshairElementGroups.SelectMany(eg => eg.CrosshairElements))
            {
                element.LabelElement.Font = TheFont;
                element.LabelElement.Text = string.Format("{0}:{1}", element.SeriesPoint.Values[0], element.Series.Tag);
            }

            foreach (CrosshairElementGroup element in e.CrosshairElementGroups)
            {
                element.HeaderElement.Font = TheFont;

            }
        }
    }
}
