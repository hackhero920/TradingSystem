<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    
    
    
    <!-- 顶部警告提醒 -->
    <Style x:Key="grdTopWarnStyle" TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Panel.ZIndex" Value="2"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMsg}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>



    <!-- 顶部警告提醒红色背景 -->
    <Style x:Key="grdTopWarnBackStyle" TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Background" Value="#a6990100"/>
    </Style>


    <!-- 顶部警告提醒红色背景上的容器 -->
    <Style x:Key="wpTopWarnWrapStyle" TargetType="WrapPanel">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="FlowDirection" Value="LeftToRight"/>
    </Style>


    <!-- 顶部警告提醒红色背景上警告图 -->
    <Style x:Key="imgTopWarnImageStyle" TargetType="Image">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="37"/>
        <Setter Property="Source" Value="pack://application:,,,/Res;component/Resources/Images/Tablet/warnLittle.png"/>
        <Setter Property="Stretch" Value="None"/>
    </Style>


    <!-- 顶部警告提醒红色背景上警告文字 -->

    <Style x:Key="lbTopWarnContentStyle" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=MediumLabelFontSize}"/>
        <Setter Property="FontFamily" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=FontName}"/>
    </Style>



    <!-- 左上角公司名 -->
    <Style x:Key="lbTopCompanyNameStyle" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="20,20,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Foreground" Value="#C5C2C3"/>
        <Setter Property="Content"  Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=CompanyLogoName}"/>
        <Setter Property="FontSize" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=MediumButtonFontSize}"/>
        <Setter Property="FontFamily" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=FontName}"/>
    </Style>
    



    <!-- 居中Logo容器布局-->
    <Style x:Key="wpCenterLogoStackStyle" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>



    <!-- 居中logo文字容器-->
    <Style x:Key="wpCenterLogoContentWrapStyle" TargetType="WrapPanel">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="FlowDirection" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=DirectionMode}"/>
    </Style>

    <!-- logo 图 -->
    <Style x:Key="imgLogoImageStyle" TargetType="Image">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="128"/>
        <Setter Property="Height" Value="128"/>
        <Setter Property="Margin" Value="20,0,20,0"/>
        <Setter Property="Source" Value="pack://application:,,,/Res;component/Resources/Images/Tablet/logo.png"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="Effect">
            <Setter.Value>
                <!--DropShadowEffect after .net4 -->
                <DropShadowEffect Color="Black" Direction="300" ShadowDepth="20" BlurRadius="50" />
            </Setter.Value>
        </Setter>
    </Style>


    <!-- logo 系统标题 -->
    <Style x:Key="lbLogoTitleStyle" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Content" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=SoftServiceNameWithoutVersion}"/>
        <Setter Property="FontSize" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=LogoTitleLabelFontSize}"/>
        <Setter Property="FontFamily" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=FontName}"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop  Color="White" Offset="0"/>
                    <GradientStop  Color="White" Offset="0.5"/>
                    <GradientStop Color="#9D9F9E" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Direction="320" ShadowDepth="3" BlurRadius="2"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- logo 系统版本 -->
    <Style x:Key="lbLogoVersionStyle" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="5,0,5,0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Content" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=SoftServiceVersion}"/>
        <Setter Property="FontSize" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=LogoTitleLabelFontSize}"/>
        <Setter Property="FontFamily" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=FontName}"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop  Color="#FBCF6D" Offset="0"/>
                    <GradientStop  Color="#FBCF6D" Offset="0.3"/>
                    <GradientStop Color="#A47819" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Direction="320" ShadowDepth="3" BlurRadius="2"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    
    <!-- 居中Loading容器 -->
    <Style x:Key="grdOperateLoadingStyle" TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,100,0,0"/>
        <Setter Property="Visibility" Value="Collapsed"/> 
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoading}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 居中loading图 -->
    <Style x:Key="imgOperateLoadingImageStyle" TargetType="Image">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="105"/>
        <Setter Property="Height" Value="105"/>
        <Setter Property="Source" Value="pack://application:,,,/Res;component/Resources/Images/Tablet/hold.png"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" 
                         Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="LoadingStoryboard">
                        <Storyboard >
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle" To="360" Duration="0:0:1" RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="LoadingStoryboard"></StopStoryboard>
                </DataTrigger.ExitActions>
              
            </DataTrigger>
            <DataTrigger Binding="{Binding AlertMsgMode}" Value="1">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding AlertMsgMode}" Value="2">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding AlertMsgMode}" Value="3">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>




    <!-- 居中登录容器 -->
    <Style x:Key="grdOperateLoginStyle" TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,50,0,0"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoading}" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    
    
    <!-- 居中登录边框 -->
    <Style x:Key="bdOperateLoginBorderStyle" TargetType="Border">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="20,20,20,20"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="660"/>
        <Setter Property="Height" Value="240"/>
    </Style>
    
    
    <!-- 居中登录字容器 -->
    <Style x:Key="spOperateLoginBorderChildStyle" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="15"/>
    </Style>
    
    <!-- 内部登录框父容器 -->
    <Style x:Key="wpOperateLoginContentParentStyle" TargetType="WrapPanel">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="15"/>
    </Style>

    
    <!-- 内部登录框父容器-用户登录图片 -->
    <Style x:Key="imgOperateLoginContentUserImageStyle" TargetType="Image">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="38"/>
        <Setter Property="Source" Value="pack://application:,,,/Res;component/Resources/Images/Tablet/user.png"/>
        <Setter Property="Stretch" Value="None"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <!-- 内部登录框-用户登录框 -->
    <Style x:Key="tbOperateLoginContentUserTextboxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="MaxLength" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Width" Value="531"/>
        <Setter Property="Height" Value="73"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Background="Transparent">
                        <Grid Width="531" Height="73">
                            <Image x:Name="backgroundSelectImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/textbox_selected.png"  Width="531" Height="73" Visibility="Collapsed"/>
                        </Grid>
                        <Grid Width="531" Height="73" ClipToBounds="True">
                            <Label x:Name="lbContent" Margin="20,0,20,0" HorizontalAlignment="Left" Content="{TemplateBinding Text}" VerticalAlignment="Center" Foreground="White" FontSize="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=MediumLabelFontSize}" FontFamily="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=FontName}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="backgroundSelectImage" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="false"/>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="lbContent" Property="Content" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=LoginUserInputMsg}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <!-- 内部登录框父容器-用户密码图片 -->
    <Style x:Key="imgOperateLoginContentPasswordImageStyle" TargetType="Image">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="31"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Source" Value="pack://application:,,,/Res;component/Resources/Images/Tablet/password.png"/>
        <Setter Property="Stretch" Value="None"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <!-- 内部登录框-用户密码框 -->
    <Style x:Key="pbOperateLoginContentPasswordboxStyle" TargetType="{x:Type TextBox}">
        <!-- <Setter Property="PasswordChar" Value="●" /> -->
        <Setter Property="MaxLength" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Width" Value="531"/>
        <Setter Property="Height" Value="73"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Background="Transparent">
                        <Grid Width="531" Height="73">
                            <Image x:Name="backgroundSelectImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/textbox_selected.png"  Width="531" Height="73" Visibility="Collapsed"/>
                        </Grid>
                        <Grid Width="531" Height="73" ClipToBounds="True">
                            <Label x:Name="lbContent" Margin="20,0,20,0" HorizontalAlignment="Left" Content="{TemplateBinding Tag}" VerticalAlignment="Center" Foreground="White" FontSize="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=MediumLabelFontSize}" FontFamily="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=FontName}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="backgroundSelectImage" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="false"/>
                                <Condition Property="Tag" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="lbContent" Property="Content" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=LoginPasswordInputMsg}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    
    <!-- 底部按钮容器 -->
    <Style x:Key="wpOperateLoginBtnsParentStyle" TargetType="WrapPanel">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0, 60, 0, 60"/>
    </Style>
    
    <!-- 登录按钮 -->
    <Style x:Key="btnLoginStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="255" Height="83" Margin="5,0,5,0">
                        <Grid>
                            <Image x:Name="backgroundImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/login.png"  Width="255" Height="83"/>
                            <Image x:Name="backgroundSelectImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/login_selected.png"  Width="255" Height="83" Visibility="Collapsed"/>
                        </Grid>
                        <Label Padding="0" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=Login}" Foreground="White" FontSize="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=MediumButtonFontSize}" FontFamily="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=FontName}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="backgroundImage" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="backgroundSelectImage" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsDisPlayKeyboard}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter TargetName="backgroundImage" Property="Opacity" Value="0.5"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- 重置按钮 -->
    <Style x:Key="btnResetStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="195" Height="83" Margin="5,0,5,0">
                        <Grid>
                            <Image x:Name="backgroundImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/reset.png"  Width="195" Height="83"/>
                            <Image x:Name="backgroundSelectImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/reset_selected.png"  Width="195" Height="83" Visibility="Collapsed"/>
                        </Grid>
                        <Label Padding="0" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=Reset2}" Foreground="White" FontSize="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=MediumButtonFontSize}" FontFamily="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=FontName}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="backgroundImage" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="backgroundSelectImage" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsDisPlayKeyboard}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter TargetName="backgroundImage" Property="Opacity" Value="0.5"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- 退出按钮 -->
    <Style x:Key="btnExitStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="200" Height="83" Margin="5,0,5,0">
                        <Grid>
                            <Image x:Name="backgroundImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/quit.png"  Width="200" Height="83"/>
                            <Image x:Name="backgroundSelectImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/quit_selected.png"  Width="200" Height="83" Visibility="Collapsed"/>
                        </Grid>
                        <Label Padding="0" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=Exit}" Foreground="White" FontSize="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=MediumButtonFontSize}" FontFamily="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=FontName}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="backgroundImage" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="backgroundSelectImage" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsDisPlayKeyboard}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter TargetName="backgroundImage" Property="Opacity" Value="0.5"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!-- 底部键盘 -->
    <Style x:Key="ctrKeyboardStyle" TargetType="Control">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,0,0,-300"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsDisplayKeyboard}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource BeginTop}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource BeginBottom}"/>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    
    
    <!-- 弹出框父容器 -->
    <Style x:Key="grdMessageboxParentStyle" TargetType="Grid">
        <Setter Property="Visibility" Value="Visible"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding AlertMsgMode}" Value="0">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 弹出框提醒 -->
    <Style x:Key="bdMessageboxBorderStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource BeginFadeIn}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource BeginFadeOut}" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 弹出框提醒图片问文字容器 -->
    <Style x:Key="wpMessageboxWrapStyle" TargetType="WrapPanel">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>
    

    <!-- 提示框中警告提醒图 -->
    <Style x:Key="imgMessageboxWarnStyle" TargetType="Image">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="92"/>
        <Setter Property="Height" Value="86"/>
        <Setter Property="Source" Value="pack://application:,,,/Res;component/Resources/Images/Tablet/warn.png"/>
        <Setter Property="Stretch" Value="None"/>
        <Setter Property="Margin" Value="10"/>
    </Style>


    <!-- 提示框中警告提醒图 -->
    <Style x:Key="tbMessageboxWarnContentStyle" TargetType="TextBlock">
        <Setter Property="MaxWidth" Value="700"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FlowDirection" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=DirectionMode}"/>
        <Setter Property="HorizontalAlignment" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=HorizontalModel}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=LittleKeyboardFontSize}"/>
        <Setter Property="FontFamily" Value="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=FontName}"/>
        <Setter Property="Margin" Value="5"/>
    </Style>


    <!-- 弹出框30天提醒按钮容器 -->
    <Style x:Key="wpMessagebox30ButtonWrapStyle" TargetType="WrapPanel">
        <Setter Property="Margin" Value="0, 30, 0, 0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding AlertMsgMode}" Value="1">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 弹出框7天提醒按钮容器 -->
    <Style x:Key="wpMessagebox7ButtonWrapStyle" TargetType="WrapPanel">
        <Setter Property="Margin" Value="0, 30, 0, 0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding AlertMsgMode}" Value="2">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <!-- 弹出框已过期提醒按钮容器 -->
    <Style x:Key="wpMessagebox0ButtonWrapStyle" TargetType="WrapPanel">
        <Setter Property="Margin" Value="0, 30, 0, 0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding AlertMsgMode}" Value="3">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <!-- 弹出退出框 -->
    <Style x:Key="wpMessageboxExitButtonWrapStyle" TargetType="WrapPanel">
        <Setter Property="Margin" Value="0, 30, 0, 0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding AlertMsgMode}" Value="4">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 好的按钮 -->
    <Style x:Key="btnMsgYesStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="235" Height="63" Margin="8,0,8,0">
                        <Grid>
                            <Image x:Name="backgroundImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/confirm_ok.png"  Width="235" Height="63"/>
                            <Image x:Name="backgroundSelectImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/confirm_ok_selected.png"  Width="235" Height="63" Visibility="Collapsed"/>
                        </Grid>
                        <Label Padding="0" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=Yes}" Foreground="White" FontSize="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=MediumLabelFontSize}" FontFamily="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=FontName}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="backgroundImage" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="backgroundSelectImage" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 确定按钮 -->
    <Style x:Key="btnMsgOKStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="235" Height="63" Margin="8,0,8,0">
                        <Grid>
                            <Image x:Name="backgroundImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/confirm_ok.png"  Width="235" Height="63"/>
                            <Image x:Name="backgroundSelectImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/confirm_ok_selected.png"  Width="235" Height="63" Visibility="Collapsed"/>
                        </Grid>
                        <Label Padding="0" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=OK}" Foreground="White" FontSize="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=MediumLabelFontSize}" FontFamily="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=FontName}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="backgroundImage" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="backgroundSelectImage" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- 不按钮 -->
    <Style x:Key="btnMsgNoStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="235" Height="63" Margin="8,0,8,0">
                        <Grid>
                            <Image x:Name="backgroundImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/confirm_cancel.png"  Width="235" Height="63"/>
                            <Image x:Name="backgroundSelectImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/confirm_cancel_selected.png"  Width="235" Height="63" Visibility="Collapsed"/>
                        </Grid>
                        <Label Padding="0" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=No}" Foreground="White" FontSize="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=MediumLabelFontSize}" FontFamily="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=FontName}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="backgroundImage" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="backgroundSelectImage" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- 退出按钮 -->
    <Style x:Key="btnMsgExitStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="235" Height="63" Margin="8,0,8,0">
                        <Grid>
                            <Image x:Name="backgroundImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/confirm_cancel.png"  Width="235" Height="63"/>
                            <Image x:Name="backgroundSelectImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/confirm_cancel_selected.png"  Width="235" Height="63" Visibility="Collapsed"/>
                        </Grid>
                        <Label Padding="0" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=Exit}" Foreground="White" FontSize="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=MediumLabelFontSize}" FontFamily="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=FontName}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="backgroundImage" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="backgroundSelectImage" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- 设置窗口 -->
    <Style x:Key="grdSettingParentStyle" TargetType="Grid">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsDisplay}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <!-- 设置按钮父级 -->
    <Style x:Key="wpSettingButtonParentStyle" TargetType="WrapPanel">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoading}" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 设置按钮 -->
    <Style x:Key="btnSystemStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Opacity" Value="0.6"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="175" Height="63" Margin="4,0,4,0">
                        <Grid>
                            <Image x:Name="backgroundImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/setting.png"  Width="175" Height="63"/>
                            <Image x:Name="backgroundSelectImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/setting_selected.png"  Width="175" Height="63" Visibility="Collapsed"/>
                        </Grid>
                        <Label Padding="0" Margin="40,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=System}" Foreground="White" FontSize="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=LittleMediumLabelFontSize}" FontFamily="{Binding Path=TStr, Source={StaticResource LangConverter}, Mode=OneWay, Converter={StaticResource LangConverter},ConverterParameter=FontName}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="backgroundImage" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="backgroundSelectImage" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding HideSetting}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Opacity" Value="0.3"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnSettingStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Opacity" Value="0.6"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="88" Height="63" Margin="4,0,4,0">
                        <Grid>
                            <Image x:Name="backgroundImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/setting2.png"  Width="88" Height="63"/>
                            <Image x:Name="backgroundSelectImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="/Res;component/Resources/Images/Tablet/setting2_selected.png"  Width="88" Height="63" Visibility="Collapsed"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="backgroundImage" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="backgroundSelectImage" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding HideSetting}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Opacity" Value="0"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- 消息弹出框父容器 -->
    <Style x:Key="grdMessageboxParentStyle2" TargetType="Grid">
        <Setter Property="Panel.ZIndex" Value="58"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding AlertMsgMode}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>